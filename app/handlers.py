from datetime import datetime
from core.classes import Date_Manipulete, DataBaseCommand
from sqlite3 import Error
import logging
from aiogram import Bot
from aiogram.types import Message
from config import ADMIN_ID


async def hello_message(message: Message, bot: Bot):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç!üëã –Ø - –±–æ—Ç –ó–∞–ø–∞–º'—è—Ç—É–π—á–∏–∫. –ú–æ—è –≥–æ–ª–æ–≤–Ω–∞ –º—ñ—Å—ñ—è - –≤—ñ–¥–∑–Ω–∞—á–∞—Ç–∏ –æ—Å–æ–±–ª–∏–≤—ñ –¥–Ω—ñ!")
    await message.answer("–Ø —Ç—É—Ç, —â–æ–± –¥–æ–ø–æ–º–∞–≥–∞—Ç–∏ —Ç–æ–±—ñ –Ω–µ –∑–∞–±—É–≤–∞—Ç–∏ –ø—Ä–æ –¥–Ω—ñ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–≤–æ—ó—Ö –¥—Ä—É–∑—ñ–≤")
    await message.answer("–î–∞–≤–∞–π –≤—ñ–¥–∑–Ω–∞—á–∏–º–æ –π —Ç–≤—ñ–π –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–∞ –¥–æ–¥–∞–º–æ –π–æ–≥–æ –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö, \n—â–æ–± —è –∑–∞–≤–∂–¥–∏ –º—ñ–≥ –ø–∞–º'—è—Ç–∞—Ç–∏ –π–æ–≥–æ —Ç–∞ –≤—ñ—Ç–∞—Ç–∏ —Ç–µ–±–µ!üéÇ")
    await DataBaseCommand.reg_new_user(
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name,
        user_id=message.from_user.id,
        user_nickname=message.from_user.username
    )
    await message.answer('–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª—ñ—Ç—å —Å–≤–æ—é –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ –î–∞—Ç–∞-–ú—ñ—Å—è—Ü—å-–†—ñ–∫ (–î–î-–ú–ú-–†–†–†–†),\n—â–æ–± —è –º—ñ–≥ –¥–æ–¥–∞—Ç–∏ —ó—ó –¥–æ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö.')


async def add_to_DB(message: Message):
    date = Date_Manipulete(message.text)
    if isinstance(date.recognition_birthday_date(), datetime):
        brth_date = date.datetime_in_str()
        await DataBaseCommand.add_birthday_date(
            brth_date,
            message.from_user.id
        )
        await message.answer('–î—è–∫—É—é –≤–∞–º –∑–∞ –Ω–∞–¥–∞–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é!')
    else:
        await message.answer('–í–∏ –≤–≤–µ–ª–∏ –¥–∞—Ç—É —Å–≤–æ–≥–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –Ω–µ —É —Ñ–æ—Ä–º–∞—Ç—ñ, —è–∫–∏–π –æ—á—ñ–∫—É–≤–∞–≤—Å—è.\n–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ –î–î-–ú–ú-–†–†–†–†')


async def reminder(bot: Bot):
    DB = DataBaseCommand
    list_users = await DB.check_birthday_date()
    for user in list_users:
        date = Date_Manipulete(user[0])  # birthday_date
        days_left = date.calculate_message_day_remind()
        id_birsday_person = int(user[1])  # user id
        non_birthday_persons = await DB.select_non_birthday_persons(id_birsday_person)
        if days_left == -7:
            for person in non_birthday_persons:
                await bot.send_message(int(person[0]),
                                       f'–£ {user[2]} {user[3]} —á–µ—Ä–µ–∑ —Ç–∏–∂–¥–µ–Ω—å –±—É–¥–µ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!')  # first and nickname
                await bot.send_message(ADMIN_ID,
                                       f'#Admin# –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user[2]} {user[3]}  –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ —Ç–∏–∂–¥–µ–Ω—å')
        elif days_left == -3:
            for person in non_birthday_persons:
                await bot.send_message(int(person[0]),
                                       f'–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user[2]} {user[3]} —á–µ—Ä–µ–∑ 3 –¥–Ω—ñ –≤—ñ–¥–∑–Ω–∞—á–∞—Ç–∏–º–µ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!')
                await bot.send_message(ADMIN_ID,
                                       f'#Admin# –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user[2]} {user[3]}  –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —á–µ—Ä–µ–∑ 3 –¥–Ω—ñ')
        elif days_left == -1:
            for person in non_birthday_persons:
                await bot.send_message(int(person[0]),
                                       f'–£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user[2]} {user[3]} –∑–∞–≤—Ç—Ä–∞ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!')
                await bot.send_message(ADMIN_ID,
                                       f'#Admin# –£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user[2]} {user[3]} –∑–∞–≤—Ç—Ä–∞ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!')
        elif days_left == 0:
            await bot.send_message(id_birsday_person, "üéâüéâüéâ\—Ç–í—ñ—Ç–∞—é –∑ –¥–Ω–µ–º –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è! –ù–µ—Ö–∞–π –∫–æ–∂–Ω–∞ –º–∏—Ç—å —Ç–≤–æ–≥–æ –∂–∏—Ç—Ç—è –±—É–¥–µ –Ω–∞–ø–æ–≤–Ω–µ–Ω–∞ –ª—é–±–æ–≤'—é, —â–∞—Å—Ç—è–º —Ç–∞ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ–º–∏ –≤—Ä–∞–∂–µ–Ω–Ω—è–º–∏. \n –ë–∞–∂–∞—é —Ç–æ–±—ñ —Å–º—ñ–ª–∏–≤–æ –π—Ç–∏ –≤–ø–µ—Ä–µ–¥ —ñ –∑–∞–≤–∂–¥–∏ –¥–æ—Å—è–≥–∞—Ç–∏ –Ω–æ–≤–∏—Ö –≤–µ—Ä—à–∏–Ω!\nüéâüéâüéâ")
            await bot.send_message(ADMIN_ID,  f'#Admin# –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á—É {user[2]} {user[3]} –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø–æ–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–Ω—è')
            for person in non_birthday_persons:
                await bot.send_message(int(person[0]),
                                       f'–£ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user[2]} {user[3]}  —Å—å–æ–≥–æ–¥–Ω—ñ –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è!. –ù–µ–∑–∞–±—É–¥—å –π–æ–≥–æ –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏ üéà')


async def start_bot(bot: Bot):
    await bot.send_message(ADMIN_ID, "–ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–≤—Å—è")


async def stop_bot(bot: Bot):
    await bot.send_message(ADMIN_ID, "–ë–æ—Ç –∑–∞–∫—Ä–∏–≤—Å—è")


async def update_brthday_pre_message(message: Message):
    await message.answer("–î–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –≤–∞—à–æ—ó –¥–∞—Ç–∏ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –≤–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —Å–≤–æ–≥–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-MM-–î–î")


async def update_brthday(message: Message):
    date = Date_Manipulete(message.text)
    if isinstance(date.recognition_birthday_date(), datetime):
        brth_date = date.datetime_in_str()
        await DataBaseCommand.update_birthday_date(
            brth_date,
            message.from_user.id
        )
        await message.answer('–î–∞—Ç–∞ –í–∞—à–æ–≥–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–∞')
    else:
        await message.answer('–í–∏ –≤–≤–µ–ª–∏ –¥–∞—Ç—É —Å–≤–æ–≥–æ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è –Ω–µ –∑–∞ —à–∞–±–ª–æ–Ω–æ–º')


async def help_func(message: Message):
    await message.answer(text="–¶–µ–π –±–æ—Ç –∑–∞–ø–∞–º'—è—Ç–æ–≤—É—î –¥–∞—Ç–∏ –¥–Ω—ñ–≤ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–≤–æ—ó —Ç–∞ —Ç–≤–æ—ó—Ö –¥—Ä—É–∑—ñ–≤. –¢–∞ –Ω–∞–≥–∞–¥—É—î —Ç–æ–±—ñ –∑–∞–≤—á–∞—Å–Ω–æ –æ –î–† —Ç–≤–æ—ó—Ö –¥—Ä—É–∑—ñ–≤.\n\
                    –î–ª—è —Ç–æ–≥–æ —â–æ–± –ø–æ–¥–∏–≤–∏—Ç–∏—Å—å —è–∫—É –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —Ç–∏ –≤–∫–∞–∑–∞–≤(-–ª–∞) –≤–µ–±–∏—Ä–∏ —É —Å–ø–∏—Å–∫—É –∫–æ–º–∞–Ω–¥—É /view")


async def view_func(message: Message):
    date = await DataBaseCommand.check_my_data(message.from_user.id)
    if date:
        await message.answer(f'–¢–∏ –≤–∫–∞–∑–∞–≤(-–ª–∞), —â–æ —Ç–≤–æ—î –¥–µ–Ω—å –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è {date[0]}')
    else:
        await message.answer('–í–∏ —â–µ –Ω–µ –≤–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è')


async def admin_info(message: Message):
    await message.answer("–ö–æ–º–∞–Ω–¥–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n/see - –í–∏–≤–µ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü—é –∑ –ë–î —É —á–∞—Ç\n/delete [id] - –≤–∏–¥–∞–ª–∏—Ç–∏ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ –ë–î\n ")
    await message.answer(f"@{message.from_user.username}")


async def admin_see_all_users(message: Message):
    if message.from_user.id == ADMIN_ID:
        table = await DataBaseCommand.select_all()
        for raw in table:
            await message.answer(f"{raw}")


async def admin_delete_user(message: Message):
    '''
    –ö–æ–º–∞–Ω–¥–∞ —è–∫–∞ –ø–æ–≤–∏–Ω–∞ –±—É—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∞ –≤ —á–∞—Ç - "delete 0000000000"
    '''
    if message.from_user.id == ADMIN_ID:
        try:
            await DataBaseCommand.admin_delete_User_from_db(int(message.text.strip()[7:]))
            await message.answer(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–ê {message.text.strip()[7:]} –±—É–ª–æ  –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö")
            logging.debug(
                f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–ê {message.text.strip()[7:]} –±—É–ª–æ  –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö")
        except Error:
            await message.answer("–¢–∏ –≤–≤—ñ–≤ –∫–æ–º–∞–Ω–¥—É –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
            logging.info(Error)
